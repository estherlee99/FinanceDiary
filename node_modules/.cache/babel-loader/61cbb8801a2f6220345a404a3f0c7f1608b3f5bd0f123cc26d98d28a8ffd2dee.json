{"ast":null,"code":"var _jsxFileName = \"/Users/estherlee/Desktop/reactproject/financial-portfolio-manager/src/components/Predictions/Predictions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predictions() {\n  _s();\n  const [assets] = useState([{\n    name: \"Asset A\",\n    value: 100\n  }, {\n    name: \"Asset B\",\n    value: 150\n  }]);\n  const [predictionData, setPredictionData] = useState([]);\n  useEffect(() => {\n    // Implement a basic prediction model and set the prediction data\n    const predictFutureValue = currentValue => {\n      // A simple prediction model that predicts a 10% increase in value\n      return currentValue * 1.1;\n    };\n    const newPredictionData = assets.map(asset => ({\n      name: asset.name,\n      currentValue: asset.value,\n      predictedValue: predictFutureValue(asset.value)\n    }));\n    setPredictionData(newPredictionData);\n  }, [assets]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: predictionData.map((asset, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [asset.name, \" - Current Value: $\", asset.currentValue.toFixed(2), \", Predicted Value: $\", asset.predictedValue.toFixed(2)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Predictions, \"BXYfkSkWrwSv0MFyoL2JJR+se+I=\");\n_c = Predictions;\nexport default Predictions;\nvar _c;\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Predictions","_s","assets","name","value","predictionData","setPredictionData","predictFutureValue","currentValue","newPredictionData","map","asset","predictedValue","children","fileName","_jsxFileName","lineNumber","columnNumber","index","toFixed","_c","$RefreshReg$"],"sources":["/Users/estherlee/Desktop/reactproject/financial-portfolio-manager/src/components/Predictions/Predictions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Predictions() {\n  const [assets] = useState([\n    { name: \"Asset A\", value: 100 },\n    { name: \"Asset B\", value: 150 },\n  ]);\n  \n  const [predictionData, setPredictionData] = useState([]);\n  \n  useEffect(() => {\n    // Implement a basic prediction model and set the prediction data\n    const predictFutureValue = (currentValue) => {\n      // A simple prediction model that predicts a 10% increase in value\n      return currentValue * 1.1;\n    };\n    \n    const newPredictionData = assets.map(asset => ({\n      name: asset.name,\n      currentValue: asset.value,\n      predictedValue: predictFutureValue(asset.value),\n    }));\n    \n    setPredictionData(newPredictionData);\n  }, [assets]);\n\n  return (\n    <div>\n      <h2>Predictions</h2>\n      <ul>\n        {predictionData.map((asset, index) => (\n          <li key={index}>\n            {asset.name} - Current Value: ${asset.currentValue.toFixed(2)}, Predicted Value: ${asset.predictedValue.toFixed(2)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Predictions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,CAAC,GAAGN,QAAQ,CAAC,CACxB;IAAEO,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC/B;IAAED,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAI,CAAC,CAChC,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,kBAAkB,GAAIC,YAAY,IAAK;MAC3C;MACA,OAAOA,YAAY,GAAG,GAAG;IAC3B,CAAC;IAED,MAAMC,iBAAiB,GAAGP,MAAM,CAACQ,GAAG,CAACC,KAAK,KAAK;MAC7CR,IAAI,EAAEQ,KAAK,CAACR,IAAI;MAChBK,YAAY,EAAEG,KAAK,CAACP,KAAK;MACzBQ,cAAc,EAAEL,kBAAkB,CAACI,KAAK,CAACP,KAAK;IAChD,CAAC,CAAC,CAAC;IAEHE,iBAAiB,CAACG,iBAAiB,CAAC;EACtC,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAAc,QAAA,EACGR,cAAc,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEO,KAAK,kBAC/BnB,OAAA;QAAAc,QAAA,GACGF,KAAK,CAACR,IAAI,EAAC,qBAAmB,EAACQ,KAAK,CAACH,YAAY,CAACW,OAAO,CAAC,CAAC,CAAC,EAAC,sBAAoB,EAACR,KAAK,CAACC,cAAc,CAACO,OAAO,CAAC,CAAC,CAAC;MAAA,GAD3GD,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CApCQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}